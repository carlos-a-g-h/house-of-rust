name: Run tests

on:
  workflow_dispatch:
    inputs:
      NAME:
        description: Project name (without the .rs or .pj extension)
        required: true
        type: string

      RUN:
        description: Perform a cargo run instead of a test
        required: true
        type: boolean
        default: false


env:
  CARGO_TERM_COLOR: always

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
    - name: Fetch repo
      uses: actions/checkout@v3
    - name: Run cargo init
      run: |
        F_RS="${{ inputs.NAME }}"".rs"
        D_PJ="${{ inputs.NAME }}"".pj"
        DET=false
        if [ -f "$F_RS" ]
        then
          DET=true
          PROJECT="$F_RS"
        fi
        if [ -d "$D_PJ" ] && [ $DET = false ]
        then
          DET=true
          PROJECT="$D_PJ"
        fi
        if [ $DET = true ]
        then
          mkdir _
          mv -v ./* _/ || true
          mv -vf _/"$PROJECT" ./
          rm -vrf _
          cargo init --vcs=none "${{ inputs.NAME }}"
          if [ -f "$F_RS" ]
          then
            mv "$PROJECT" "${{ inputs.NAME }}"/src/main.rs
          fi
          if [ -d "$D_PJ" ]
          then
            cp -va "$PROJECT"/* "${{ inputs.NAME }}"/
            rm -rf "$PROJECT"
          fi
          mv "${{ inputs.NAME }}"/* ./
          if [ -f "to-add.sh" ]
          then
            bash to-add.sh
            rm to-add.sh
          fi
          printf "\nFiles\n"
          find ./|grep -v "^./.git"
        fi
    - name: Run cargo build
      run: cargo build --verbose
    - name: Run cargo test (or run)
      run: |
        DO_RUN=${{ inputs.RUN }}
        if [ $DO_RUN == true ]
        then
          printf "\nProgram output is below this line\n"
          cargo run --verbose
        fi
        if [ $DO_RUN == false ]
        then
          printf "\nTest results are below this line\n"
          cargo test --verbose
        fi
